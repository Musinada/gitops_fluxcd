apiVersion: apps/v1
kind: Deployment
metadata:
  name: assets
  labels:
    name: assets
    instance: assets
    component: service
    app: E-commerce-app
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      name: assets
      instance: assets
      component: service
      app: E-commerce-app
  template:
    metadata:
      labels:
        name: assets
        instance: assets
        component: service
        app: E-commerce-app
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: assets
      containers:
        - name: assets
          envFrom:
            - configMapRef:
                name: assets
          image: "public.ecr.aws/aws-containers/retail-store-sample-assets:0.5.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health.html
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 3
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 128m
              memory: 128Mi
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory